<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FoodWo</title>
    <link href="/public/css/output.css" rel="stylesheet">
    <link rel="apple-touch-icon" sizes="180x180" href="/public/images/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/public/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/public/images/favicon-16x16.png">
    <script src="https://kit.fontawesome.com/70218ce737.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <style>
        /* Hide the default scrollbar */
        .overflow-x-scroll::-webkit-scrollbar {
            display: none;
        }

        .overflow-y-auto::-webkit-scrollbar {
            display: none;
        }

        /* Define the scrollbar track (optional) */
        .overflow-x-scroll::-webkit-scrollbar-track {
            background: transparent;
            /* You can customize the track's appearance */
        }

        /* Define the scrollbar track (optional) */
        .overflow-y-scroll::-webkit-scrollbar-track {
            background: transparent;
            /* You can customize the track's appearance */
        }

        /* Define the scrollbar thumb (optional) */
        .overflow-x-scroll::-webkit-scrollbar-thumb {
            background: transparent;
            /* You can customize the thumb's appearance */
        }

        /* Define the scrollbar thumb (optional) */
        .overflow-y-scroll::-webkit-scrollbar-thumb {
            background: transparent;
            /* You can customize the thumb's appearance */
        }

        .text-ellipsis {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    </style>
</head>

<body class="bg-white">
    <!-- navigation -->
    <%- include('../views/userNavbar.ejs') %>

        <section class="px-5 py-2">
            <div id="alert"
                class="transition delay-150 bg-orange-500 py-3 px-4 text-center w-56 rounded text-white mx-auto ease-linear opacity-0 -translate-x-full">
                <span id="alertMsg"></span>
            </div>
            <div class="flex items-center justify-between px-3 py-5">
                <span class=" px-3 py-2 text-lg md:text-2xl text-center font-bold">Shopping Cart</span>
                <a href="/products"
                    class="flex items-center justify-between text-sm md:text-lg hover:text-orange-500 cursor-pointer"><i
                        class="fa-solid fa-arrow-left mx-2"></i> <span>Continue Shopping</span></a>
            </div>

            <div class="flex flex-col lg:flex-row my-3">
                <% let totalItems=0; %>
                    <% let foodIds=[]; %>
                        <% let totalPrice=0; %>
                            <% let quantities=new Array(cartItems.length).fill(1); %>
                                <div
                                    class="h-96 overflow-y-auto overflow-x-hidden w-full lg:w-1/2 px-3 py-3 my-2 shadow-sm">
                                    <% if(cartItems){ cartItems.forEach((cart, index)=> { %>
                                        <% foodIds.push(cart._id); %>
                                            <div
                                                class="bg-[#f0efef] md:px-5 py-3 my-2 flex justify-between items-center rounded shadow-md">
                                                <div class=" w-20 h-16 object-cover rounded mx-2 md:mr-3 ">
                                                    <img class="w-full h-full rounded object-cover"
                                                        src="/<%= cart.productImages[0]%>" alt="">
                                                </div>

                                                <div class=" mr-2 md:mr-3 w-40 overflow-hidden shadow-inner ">
                                                    <h2 class="text-sm md:text-xl font-semibold">
                                                        <%= cart.productName %>
                                                    </h2>
                                                    <%if(offers){ if(offers[0].foodId == cart._id){%>
                                                        <span class="font-normal text-sm text-orange-500">*Special Offer</span>
                                                    <%}}%>
                                                </div>

                                                <div class=" flex mr-2 md:mr-3 relative text-center justify-center">
                                                    <div onclick="priceDown(event)" data-index="<%= index %>"
                                                        data-fid="<%= cart._id %>" data-stock="<%=cart.productInStock%>"
                                                        class="bg-orange-500 cursor-pointer text-white py-1 px-2 md:py-1 md:px-2 text-sm md:text-md rounded-l-full">
                                                        <i class="fa-solid fa-minus"></i>
                                                    </div>
                                                    <span id="<%= `qty${index}` %>"
                                                        class="qty mx-3 text-sm my-auto">1</span>
                                                    <div onclick="priceUp(event)" data-index="<%= index %>"
                                                        data-fid="<%= cart._id %>" data-stock="<%=cart.productInStock%>"
                                                        class="bg-orange-500 cursor-pointer text-white py-1 px-2 md:py-1 md:px-2 text-sm md:text-md rounded-r-full">
                                                        <i class="fa-solid fa-plus"></i>
                                                    </div>
                                                    <p class="hidden absolute mt-7 text-sm text-center text-orange-500"
                                                        id="<%= `stockAlert${index}`%>"></p>
                                                </div>

                                                <div class=" mr-2 md:mx-3">
                                                    <span class="text-orange-500 text-sm md:text-xl md:font-semibold">
                                                        <span data-actualPrice="<%= cart.productPrice %>"
                                                            id="<%= `price${index}` %>">
                                                            <%= '₹' +cart.productPrice %>
                                                        </span>
                                                    </span>
                                                </div>
                                                <% totalItems +=quantities[index]; %>
                                                    <% totalPrice +=quantities[index] * parseFloat(cart.productPrice);
                                                        %>
                                                        <div class=" mr-2 md:mx-2">
                                                            <span class="text-orange-500 md:text-2xl">
                                                                <i onclick="deleteFromCart(event)"
                                                                    data-index="<%=index%>" data-foodid="<%=cart._id%>"
                                                                    data-userid="<%=userId%>"
                                                                    class="xmark cursor-pointer fa-solid fa-close">
                                                                </i>
                                                            </span>
                                                        </div>

                                            </div>
                                            <% }) }else{ %>
                                                <div class="flex flex-col justify-center items-center">
                                                    <h1 class="text-4xl text-orange-500 text-center font-bold my-3">No
                                                        items in
                                                        the Cart!!</h1>
                                                    <div class="w-full h-72">
                                                        <img class="w-full h-full object-cover"
                                                            src="http://media.istockphoto.com/vectors/female-hands-with-steel-fork-and-empty-ceramic-plate-vector-id642208480?k=6&m=642208480&s=612x612&w=0&h=u5WmG_7RuLq1M43PpGtMAuZBlytf-dA6wbkwljWpzdk="
                                                            alt="">
                                                    </div>
                                                </div>
                                                <% } %>
                                </div>

                                <div class="bg-orange-500 mx-2 lg:w-1/2 px-4 py-5 shadow-2xl rounded-xl text-white">
                                    <div class="py-2 px-3 text-start">
                                        <h2 class="py-2 text-xl md:text-2xl font-bold text-white">Summary</h2>
                                    </div>
                                    <div class="flex justify-between px-3 my-3">
                                        <span class="font-bold">Items : <%= totalItems %></span>
                                        <span class="finalPrice">₹<%= totalPrice.toFixed(2) %></span>
                                    </div>
                                    <div class="px-3 my-3">
                                        <h3 class="font-bold">Shipping to :</h3>
                                        <div id="addContainer">
                                            <div
                                                class='<%if(userAddress.address1 !=="false" ){%> block <%}else{%>hidden<%}%>'>
                                                <span>
                                                    <div class="flex my-2 text-sm md:w-80">
                                                        <input type="checkbox" name="" id="addressCheck1" class="mx-2">
                                                        <span id="currentAdd1">
                                                            <%=userAddress.address1%>
                                                        </span>
                                                    </div>
                                                </span>

                                                <div class="text-end"><span class="cursor-pointer" id="editAdd1"
                                                        data-id="1" onclick="editAddress(event)">edit address</span>
                                                </div>
                                                <div class="text-end"><span class="cursor-pointer hidden" id="saveAdd1"
                                                        data-id="1" onclick="saveAddress(event)">save
                                                        address</span></div>
                                            </div>


                                            <div
                                                class='<%if(userAddress.address2 !=="false" ){%> block <%}else{%>hidden <% } %>'>
                                                <span>
                                                    <div class="flex my-2 text-sm md:w-80">
                                                        <input type="checkbox" name="" id="addressCheck2" class="mx-2">
                                                        <span id="currentAdd2">
                                                            <%=userAddress.address2%>
                                                        </span>
                                                    </div>
                                                </span>
                                                <div class="text-end"><span class="cursor-pointer" id="editAdd2"
                                                        data-id="2" onclick="editAddress(event)">edit address</span>
                                                </div>
                                                <div class="text-end"><span class="cursor-pointer hidden" id="saveAdd2"
                                                        data-id="2" onclick="saveAddress(event)">save
                                                        address</span></div>

                                            </div>

                                            <div
                                                class='<%if(userAddress.address3 !=="false" ){%> block <%}else{%>hidden<%}%>'>
                                                <span>
                                                    <div class="flex my-2 text-sm md:w-80">
                                                        <input type="checkbox" name="" id="addressCheck3" class="mx-2">
                                                        <span id="currentAdd3">
                                                            <%=userAddress.address3%>
                                                        </span>
                                                    </div>
                                                </span>
                                                <div class="text-end"><span class="cursor-pointer" data-id="3"
                                                        id="editAdd3" onclick="editAddress(event)">edit
                                                        address</span>
                                                </div>
                                                <div class="text-end"><span class="cursor-pointer hidden" id="saveAdd3"
                                                        data-id="3" onclick="saveAddress(event)">save
                                                        address</span>
                                                </div>
                                            </div>
                                        </div>
                                        <textarea class="text-black hidden w-full px-3 rounded" name="" id="newAdd1"
                                            cols="" rows="4"></textarea>
                                        <textarea class="text-black hidden w-full px-3 rounded" name="" id="newAdd2"
                                            cols="" rows="4"></textarea>
                                        <textarea class="text-black hidden w-full px-3 rounded" name="" id="newAdd3"
                                            cols="" rows="4"></textarea>
                                    </div>

                                    <%if(userAddress.address3==="false" ){%>
                                        <div class="px-3 my-4 text-end">
                                            <textarea class="text-black hidden w-full px-3 rounded" name=""
                                                id="addingAddressCon" cols="" rows="4"></textarea>
                                            <span class="cursor-pointer" id="addingAddress"
                                                onclick="addingAddress(event)">new address</span>
                                            <span class="cursor-pointer hidden" id="savingAddress"
                                                onclick="savingAddress(event)">save address</span>
                                        </div>
                                        <%}%>

                                            <div class="my-3 px-3">
                                                <div><input type="checkbox" name="" id="couponCheck"
                                                        class="mr-2"><span>Apply Code
                                                        :</span>
                                                </div>
                                                <div>
                                                    <input type="text" name="" disabled="disabled" id="couponInput"
                                                        class="rounded my-2 py-1 text-black diabled"
                                                        onchange="onCouponChange(event)">
                                                    <button id="couponBtn"
                                                        class="hidden px-2 py-1 bg-white text-orange-500 rounded"
                                                        onclick="checkCoupon(event)">apply</button>
                                                    <button id="couponRemoveBtn"
                                                        class="hidden px-2 py-1 bg-white text-orange-500 rounded"
                                                        onclick="removeCoupon(event)">remove</button>
                                                    <p class="hidden" id="couponAlert"></p>
                                                </div>
                                            </div>

                                            <h2 class="text-center font-bold mt-5">Payment Method</h2>
                                            <div class="flex flex-col md:flex-row justify-between items-center my-5">
                                                <label for="cod"
                                                    class="my-2 md:my-0 w-52 md:w-36 text-center py-2 px-3 text-white border border-white cursor-pointer rounded ease-linear hover:text-orange-500 hover:bg-white paymentBtns"
                                                    onclick="handlePayment('cod')">
                                                    <input type="radio" name="paymentMethod" id="cod" class="hidden"
                                                        onchange="checkChange(event)" />
                                                    COD
                                                </label>

                                                <label for="walletPay"
                                                    class="my-2 md:my-0 w-52 md:w-36 text-center py-2 px-3 text-white border border-white cursor-pointer rounded ease-linear hover:text-orange-500 hover:bg-white paymentBtns"
                                                    onclick="handlePayment('walletPay')">
                                                    <input type="radio" name="paymentMethod" id="walletPay"
                                                        class="hidden" onchange="checkChange(event)" />
                                                    FoodWo Wallet
                                                </label>

                                                <label for="onlinePayment"
                                                    class="my-2 md:my-0 w-52 md:w-36 text-center py-2 px-3 text-white border border-white cursor-pointer rounded ease-linear hover:text-orange-500 hover:bg-white paymentBtns"
                                                    onclick="handlePayment('onlinePayment')">
                                                    <input type="radio" name="paymentMethod" id="onlinePayment"
                                                        class="hidden" onchange="checkChange(event)" checked />
                                                    Online Payment
                                                </label>
                                            </div>

                                            <!-- <div class="my-3 px-3 flex justify-center items-center">
                                                <input type="checkbox" name="" id="cod" onchange="checkChange(event)"
                                                    class="mr-2"><span>Cash on
                                                    Delivery</span>
                                            </div>
                                            <div class="my-3 px-3 flex justify-center items-center">
                                                <input type="checkbox" name="" id="walletPay"
                                                    onchange="checkChange(event)" class="mr-2"><span>pay
                                                    using
                                                    wallet</span>
                                            </div>
                                            <div class="my-3 px-3 flex justify-center items-center">
                                                <input type="checkbox" checked name="" id="onlinePayment"
                                                    onchange="checkChange(event)" class="mr-2"><span>pay online</span>
                                            </div> -->
                                            <div class="transition delay-150 text-end ease-linear hidden"
                                                id="walletBalance"><span>Wallet Balance : ₹<span class="font-semibold">
                                                        <% if(wallet){%>
                                                            <%=wallet.balance%>
                                                                <%} else{%>0.00<%}%>
                                                    </span></span></div>
                                            <hr class="py-[0.28px] bg-white rounded my-5">
                                            <% if(offers){ %>
                                                <%let offerAmount;%>
                                                <% if(offers[0].discountType=="per" ){%>
                                                    <% offerAmount = (offers[0].discountValue*offers[0].actualPrice/100)%>
                                                    <%}else{%>
                                                       <% offerAmount = offers[0].discountValue%>
                                                        <% }%>
                                                <div class="flex justify-between px-3 font-bold">
                                                    <span>offer discount : </span><span>-<%=offerAmount%>Rs</span>
                                                    <% totalPrice = totalPrice - offerAmount%>
                                                </div>
                                            <%}%>
                                            <div class="flex justify-between px-3 font-bold"><span>Total : </span>
                                              
                                                <span class="finalPrice">₹ <span id="dynamicTotalAmt">

                                                        <%= totalPrice.toFixed(2) %>
                                                    </span></span>

                                            </div>
                                            <div class="text-center my-4"><button onclick="handleCheckout(event)"
                                                    class="py-2 px-20 rounded bg-white shadow-md text-orange-500 font-bold">checkout</button>
                                            </div>
                                </div>
            </div>

        </section>

        <!-- footer -->
        <%- include('../views/userFooter.ejs') %>

            <script>
                // let quantity = 1;
                let finalamout = parseInt('<%-totalPrice %>');;
                let disType;
                let disValue;
                let couponAddedOrNot = false;
                let idQtyObj = {};
                const alertBox = document.getElementById('alert')
                const alertMsg = document.getElementById('alertMsg')
                const couponAlert = document.getElementById('couponAlert');
                const couponCheck = document.getElementById('couponCheck');
                const finalamountElement = document.getElementById('dynamicTotalAmt');


                let finalPrice = parseInt('<%-totalPrice %>');

                const currentAdd1 = document.getElementById('currentAdd1');
                const currentAdd2 = document.getElementById('currentAdd2');
                const currentAdd3 = document.getElementById('currentAdd3');
                const addContainer = document.getElementById('addContainer');

                const final = document.querySelectorAll(`.finalPrice`);

                (() => {
                    const cartItems = '<%-JSON.stringify(cartItems).trim()%>';
                    console.log(cartItems);
                    const check = JSON.parse(cartItems);
                    const ids = check.filter(item => item._id);
                    console.log(ids);
                    ids.forEach((item) => {
                        idQtyObj[item._id] = { id: item._id, qty: 1 }; // Setting each _id as a key in idQtyObj with value 1
                    });

                    console.log(idQtyObj);
                })();

                function handlePayment(id) {
                    const radioInput = document.getElementById(id);
                    const walletBalance = document.getElementById('walletBalance');
                    radioInput.checked = true;
                    paymentMethods(event);
                    walletBalance.classList.add('hidden')
                    if (id == "walletPay") {
                        walletBalance.classList.remove('hidden')
                    }
                }

                function paymentMethods(event) {
                    event.preventDefault();
                    console.log(event)
                    // Get all elements with the 'paymentBtns' class
                    const paymentButtons = document.querySelectorAll('.paymentBtns');

                    // Remove the 'bg-white' and 'text-orange-500' classes from all buttons
                    paymentButtons.forEach(button => {
                        button.classList.remove('bg-white', 'text-orange-500');
                    });

                    // Add the 'bg-white' and 'text-orange-500' classes to the clicked button
                    event.target.classList.remove('text-white');
                    event.target.classList.add('bg-white', 'text-orange-500');
                }

                function priceUp(event) {
                    const index = event.currentTarget.getAttribute('data-index');
                    const fid = event.currentTarget.getAttribute('data-fid');
                    const qty = document.getElementById(`qty${index}`);
                    const currentPrice = document.getElementById(`price${index}`);
                    const actualPrice = currentPrice.getAttribute('data-actualPrice');
                    const remainingStock = parseInt(event.currentTarget.getAttribute('data-stock'));
                    const stockAlert = document.getElementById(`stockAlert${index}`);



                    // Increment quantity and calculate the new price
                    let quantity = parseInt(qty.innerText)
                    quantity++;
                    if (quantity > remainingStock) {
                        console.log('qty: ', quantity, ' stock: ', remainingStock)
                        stockAlert.innerText = `only ${remainingStock} left`;
                        stockAlert.classList.remove('hidden');
                        return;
                    } else {
                        const newPrice = quantity * parseFloat(actualPrice);
                        finalPrice += parseFloat(actualPrice);
                        // finalPrice-=parseInt(actualPrice);

                        // Update the displayed quantity and price
                        qty.innerText = quantity;
                        idQtyObj[fid].qty = quantity;
                        console.log(idQtyObj)
                        currentPrice.innerText = "₹" + newPrice
                        // final.forEach((item) => {
                        //     item.innerHTML = "₹" + `<span id="dynamicTotalAmt">${finalPrice.toFixed(2)}</span>`
                        // })
                        finalamountElement.innerText = finalPrice.toFixed(2)
                        finalamout = finalPrice.toFixed(2);
                        // Update the final price
                        // finalPrice = newPrice;

                        // You can add additional logic here, like sending data to the server if needed.
                    }
                }

                function priceDown(event) {
                    const index = event.currentTarget.getAttribute('data-index');
                    const qty = document.getElementById(`qty${index}`);
                    const fid = event.currentTarget.getAttribute('data-fid');
                    const currentPrice = document.getElementById(`price${index}`);
                    const actualPrice = currentPrice.getAttribute('data-actualPrice');
                    const remainingStock = parseInt(event.currentTarget.getAttribute('data-stock'));
                    const stockAlert = document.getElementById(`stockAlert${index}`);
                    let quantity = parseInt(qty.innerText)

                    if (quantity > 1) {
                        // Decrement quantity and calculate the new price
                        quantity--;

                        if (quantity <= remainingStock) {
                            stockAlert.classList.add('hidden');
                        }

                        const newPrice = quantity * parseFloat(actualPrice);
                        finalPrice -= parseFloat(actualPrice);
                        // Update the displayed quantity and price
                        qty.innerText = quantity;
                        idQtyObj[fid].qty = quantity;
                        console.log(idQtyObj)
                        currentPrice.innerText = "₹" + newPrice;
                        // final.forEach((item) => {
                        //     item.innerHTML = "₹" + `<span id="dynamicTotalAmt">${finalPrice.toFixed(2)}</span>`
                        // })
                        finalamountElement.innerText = finalPrice.toFixed(2)
                        finalamout = finalPrice.toFixed(2);
                        // Update the final price
                        // finalPrice = newPrice;

                        // You can add additional logic here, like sending data to the server if needed.
                    }
                }


                async function deleteFromCart(event) {
                    console.log(event)
                    event.stopPropagation();
                    event.preventDefault();
                    const index = event.target.dataset.index;
                    const xmark = document.getElementsByClassName('xmark')[parseInt(index)];
                    console.log(index)
                    const foodid = xmark.getAttribute('data-foodid');
                    const userid = xmark.getAttribute('data-userid');

                    const reqData = {
                        foodid: foodid,
                        userid: userid
                    }
                    const realData = await JSON.stringify(reqData);

                    const response = await fetch('/removeFromCart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': "application/json",
                        },
                        body: realData
                    })

                    if (response.ok) {
                        const data = await response.json()
                        if (data.deleted) {
                            window.scrollTo(0, 0)
                            alertBox.classList.remove('opacity-0')
                            alertBox.classList.remove('-translate-x-full')
                            alertMsg.innerText = `item removed from cart`;
                            setTimeout(() => {
                                window.location.reload();
                            }, 2000)
                        } else if (data.err) {
                            window.scrollTo(0, 0)
                            alertBox.classList.remove('opacity-0')
                            alertBox.classList.remove('-translate-x-full')
                            alertMsg.innerText = `${data.err}`;
                        } else {
                            window.scrollTo(0, 0)
                            alertBox.classList.remove('opacity-0')
                            alertBox.classList.remove('-translate-x-full')
                            alertMsg.innerText = `something went wrong!`;
                        }
                    }
                }

                function addingAddress(event) {
                    event.preventDefault();
                    const textContainer = document.getElementById('addingAddressCon');
                    const savingBtn = document.getElementById('savingAddress')
                    textContainer.classList.remove('hidden');
                    event.target.classList.add('hidden')
                    savingBtn.classList.remove('hidden');
                }

                async function savingAddress(event) {
                    event.preventDefault();
                    const textContainer = document.getElementById('addingAddressCon');
                    const addingBtn = document.getElementById('addingAddress');
                    const container1 = document.getElementById('currentAdd1');
                    const container2 = document.getElementById('currentAdd2');
                    const container3 = document.getElementById('currentAdd3');
                    const address1 = '<%=userAddress.address1%>';
                    const address2 = '<%=userAddress.address2%>';
                    const address3 = '<%=userAddress.address3%>';
                    let flag = 0;

                    if (address1 === "false") {
                        container1.innerText = textContainer.innerText.trim();
                        flag = 1;
                    } else if (address2 === "false") {
                        container2.innerText = textContainer.innerText.trim();
                        flag = 2;
                    } else {
                        container3.innerText = textContainer.innerText.trim();
                        flag = 3;
                    }
                    console.log(textContainer.value);
                    const newaddress = {
                        address: textContainer.value.trim()
                    }
                    const userid = sessionStorage.getItem('user_id');
                    const reqData = await JSON.stringify(newaddress)
                    const adding = await fetch(`/add-newaddres/${userid}/${flag}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': "application/json"
                        },
                        body: reqData
                    })

                    if (adding.ok) {
                        const res = await adding.json();
                        if (res.updated) {
                            alertMsg.innerHTML = `<i class="fa-solid fa-check text-xl"></i> added new address`;
                            alertBox.classList.remove('-translate-x-full')
                            alertBox.classList.remove('opacity-0')
                            window.scrollTo(0, 0)
                            setTimeout(() => {
                                alertBox.classList.add('-translate-x-full')
                                alertBox.classList.add('opacity-0')
                                window.location.reload();
                            }, 3000)
                        } else {
                            alertMsg.innerHTML = `<i class="fa-solid fa-triangle-exclamation text-xl"></i> Something went wrong.Please try again.`;
                            alertBox.classList.remove('-translate-x-full')
                            alertBox.classList.remove('opacity-0')
                            window.scrollTo(0, 0)
                            setTimeout(() => {
                                alertBox.classList.add('-translate-x-full')
                                alertBox.classList.add('opacity-0')
                            }, 3000)
                        }
                    }
                }

                function editAddress(event) {
                    event.preventDefault();
                    const id = event.target.dataset.id;
                    const currentAdd = document.getElementById(`currentAdd${id}`)
                    const newAdd = document.getElementById(`newAdd${id}`)
                    const saveAdd = document.getElementById(`saveAdd${id}`)
                    currentAdd.style.display = 'none';
                    newAdd.innerText = currentAdd.innerText.trim();
                    newAdd.classList.remove('hidden');
                    event.target.classList.add('hidden')
                    saveAdd.classList.remove('hidden')

                }
                async function saveAddress(event) {
                    event.preventDefault();
                    const id = event.target.dataset.id;
                    const currentAdd = document.getElementById(`currentAdd${id}`)
                    const newAdd = document.getElementById(`newAdd${id}`)
                    const editAdd = document.getElementById(`editAdd${id}`)
                    currentAdd.innerText = newAdd.value;
                    currentAdd.innerText = currentAdd.innerText.trim();
                    const userid = sessionStorage.getItem('user_id');
                    const newaddress = {
                        address: currentAdd.innerText,
                    }
                    const address = JSON.stringify(newaddress)
                    const saveAddressToDB = await fetch(`/save-address/${userid}/${id}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': "application/json"
                        },
                        body: address
                    })

                    if (saveAddressToDB.ok) {
                        const res = await saveAddressToDB.json();
                        if (res.updated) {
                            alertMsg.innerHTML = `<i class="fa-solid fa-check text-xl"></i> Address updated`;
                            alertBox.classList.remove('-translate-x-full')
                            alertBox.classList.remove('opacity-0')
                            window.scrollTo(0, 0)
                            setTimeout(() => {
                                alertBox.classList.add('-translate-x-full')
                                alertBox.classList.add('opacity-0')
                                window.location.reload();
                            }, 3000)
                        } else {
                            alertMsg.innerHTML = `<i class="fa-solid fa-triangle-exclamation text-xl"></i> Something went wrong.Please try again.`;
                            alertBox.classList.remove('-translate-x-full')
                            alertBox.classList.remove('opacity-0')
                            window.scrollTo(0, 0)
                            setTimeout(() => {
                                alertBox.classList.add('-translate-x-full')
                                alertBox.classList.add('opacity-0')
                            }, 3000)
                        }
                    }
                    newAdd.classList.add('hidden');
                    currentAdd.style.display = 'block';
                    event.target.classList.add('hidden')
                    editAdd.classList.remove('hidden')
                }

                function initPayment(data) {
                    console.log("amount :", data)
                    const couponInput = document.getElementById('couponInput').value;
                    const foodides = '<%=foodIds%>'
                    const options = {
                        key: "<%=process.env.RAZOR_PAY_KEY_ID%>",
                        amount: parseInt(data.data.amount),
                        currency: data.data.currency,
                        name: "FoodWo",
                        description: "Test Transaction",
                        image: "/public/images/android-chrome-512x512.png",
                        order_id: data.data.id,
                        handler: async (response) => {
                            try {
                                console.log('response :', response)
                                const verifyUrl = '/verify'
                                const data = await axios.post(verifyUrl, response)
                                console.log('verifyData : ', data)
                                if (data.status === 200) {

                                    const checkAddress1 = document.getElementById('addressCheck1');
                                    const checkAddress2 = document.getElementById('addressCheck2');
                                    const checkAddress3 = document.getElementById('addressCheck3');
                                    let selectedAddress = '';

                                    if (checkAddress1.checked) {
                                        selectedAddress = currentAdd1.innerText;
                                    } else if (checkAddress2.checked) {
                                        selectedAddress = currentAdd2.innerText;
                                    } else if (checkAddress3.checked) {
                                        selectedAddress = currentAdd3.innerText;
                                    } else {
                                        selectedAddress = 'No address selected';
                                    }
                                    console.log(selectedAddress)

                                    const user_id = sessionStorage.getItem('user_id');
                                    const customerName = sessionStorage.getItem('username');
                                    const qty = document.querySelectorAll('.qty');
                                    const cartItems = '<%-JSON.stringify(cartItems).trim()%>';
                                    console.log(cartItems);
                                    const check = JSON.parse(cartItems);
                                    console.log(check)
                                    if (!check) {
                                        alertMsg.innerHTML = `<i class="fa-solid fa-triangle-exclamation text-xl"></i> No Food items on the cart`;
                                        alertBox.classList.remove('-translate-x-full')
                                        alertBox.classList.remove('opacity-0')
                                        window.scrollTo(0, 0)
                                        setTimeout(() => {
                                            alertBox.classList.add('-translate-x-full')
                                            alertBox.classList.add('opacity-0')
                                        }, 3000)
                                        return;
                                    }

                                    check.forEach(async (item, index) => {
                                        // console.log(item.productName,item.productPrice,finalPrice,qty[index].innerText);
                                        const productId = item._id;
                                        const productName = item.productName;
                                        const image = item.productImages[0];
                                        const productPrice = item.productPrice;
                                        const productQty = parseInt(qty[index].innerText);
                                        console.log('productName : ', productName)
                                        console.log('productPrice : ', productPrice)
                                        console.log('productQty : ', productQty)
                                        console.log('\n......................................')

                                        const productData = {
                                            user_id: user_id,
                                            customerName: customerName,
                                            productId: productId,
                                            productName: productName,
                                            image: image,
                                            productQty: productQty,
                                            productPrice: productPrice,
                                            paymentMethod: 'Online Payment',
                                            address: selectedAddress,
                                            coupon: couponInput,
                                            foodides: foodides
                                        }

                                        const reqData = await JSON.stringify(productData);
                                        const checkResponse = await fetch('/cart-checkout', {
                                            method: 'POST',
                                            headers: {
                                                'Content-Type': "application/json",
                                            },
                                            body: reqData
                                        })
                                        if (checkResponse.status == 400 || checkResponse.status == 404 || checkResponse.status == 500) {
                                            const data = await checkResponse.json();
                                            alertMsg.innerHTML = `<i class="fa-solid fa-triangle-exclamation text-xl"></i> ${data.err}`;
                                            alertBox.classList.remove('-translate-x-full')
                                            alertBox.classList.remove('opacity-0')
                                            window.scrollTo(0, 0)
                                            setTimeout(() => {
                                                alertBox.classList.add('-translate-x-full')
                                                alertBox.classList.add('opacity-0')
                                            }, 3000)
                                            return;
                                        }


                                        if (checkResponse.ok) {
                                            const reqData = {
                                                foodid: productId,
                                                userid: user_id
                                            }
                                            const realData = await JSON.stringify(reqData);

                                            const response = await fetch('/removeFromCart', {
                                                method: 'POST',
                                                headers: {
                                                    'Content-Type': "application/json",
                                                },
                                                body: realData
                                            })
                                            if (response.ok) {
                                                const data = await checkResponse.json();
                                                console.log(data)
                                                sessionStorage.setItem('orderid', data.orderid)
                                                sessionStorage.setItem('orderaddress', data.address)
                                                window.location.href = '/order-success'
                                            }
                                            console.log(`${productName} Ok.`)
                                        }
                                    });
                                }
                            } catch (error) {
                                console.log(error);
                            }
                        },
                        theme: {
                            color: "#F97316"
                        }
                    }
                    const rzpl = new window.Razorpay(options)
                    rzpl.open()
                }

                couponCheck.addEventListener('change', (check) => {
                    const couponInput = document.getElementById('couponInput')
                    if (couponCheck.checked) {
                        couponInput.disabled = false;
                    } else {
                        couponInput.disabled = true;
                        const couponBtn = document.getElementById('couponBtn');
                        couponBtn.classList.add('hidden')

                    }
                })

                async function onCouponChange(event) {
                    event.preventDefault();
                    const coupon = event.target.value;
                    // couponAlert.innerText =`${coupon.toString()}`;
                    if (coupon.toUpperCase() !== coupon) {
                        couponAlert.innerText = `*Invalid Coupon`;
                        couponAlert.classList.remove('hidden');
                        return;
                    } else {
                        couponAlert.classList.add('hidden');
                        const couponBtn = document.getElementById('couponBtn');
                        couponBtn.classList.remove('hidden')
                    }
                }

                async function checkCoupon(event) {
                    event.preventDefault();
                    const couponInput = document.getElementById('couponInput').value;
                    const couponRemoveBtn = document.getElementById("couponRemoveBtn");
                    const couponBtn = document.getElementById('couponBtn');
                    if (couponInput.toUpperCase() !== couponInput) {
                        couponAlert.innerText = `*Invalid Coupon`;
                        couponAlert.classList.remove('hidden');
                        return;
                    }

                    const userId = sessionStorage.getItem('user_id');
                    const foodides = '<%=foodIds%>'
                    console.log('success : ', foodides)
                    const coupon = { coupon: couponInput, foodids: foodides, idQtyObj: idQtyObj }
                    const reqData = JSON.stringify(coupon)
                    console.log(reqData, userId)

                    const res = await fetch(`/check-coupon/${userId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': "application/json"
                        },
                        body: reqData
                    })

                    if (res.status == 404) {
                        const data = await res.json();
                        couponAlert.innerText = `${data.err}`;
                        couponAlert.classList.remove('hidden');
                        return;
                    }

                    if (res.status == 400) {
                        const data = await res.json();
                        couponAlert.innerText = `${data.err}`;
                        couponAlert.classList.remove('hidden');
                        return;
                    }

                    console.log('added ', res);
                    if (res.ok) {
                        const data = await res.json();
                        if (data.added) {
                            let amount = 0;
                            disType = data.discountType
                            disValue = parseInt(data.discountValue);
                            couponBtn.classList.add('hidden')
                            couponRemoveBtn.classList.remove('hidden');
                            couponAlert.innerText = `coupon added`;
                            couponAddedOrNot = true;
                            couponAlert.classList.remove('hidden');
                            const finalP = parseInt('<%= totalPrice%>')
                            const foodPrice = parseInt(data.foodPrice)
                            if (disType == "per") {
                                finalamout = parseFloat(finalamountElement.innerText) - (disValue * foodPrice / 100);
                                finalamountElement.innerText = finalamout;
                                console.log('fianlPreview ', finalamountElement.innerText)
                            } else {
                                finalamout = parseFloat(finalamountElement.innerText) - disValue;
                                finalamountElement.innerText = finalamout.toFixed(2);
                            }

                        } else {
                            couponAlert.innerText = `${data.err}`;
                            couponAlert.classList.remove('hidden');
                            return;
                        }
                    } else {
                        couponAlert.innerText = `Something went wrong.Please try again.`;
                        couponAlert.classList.remove('hidden');
                        return;
                    }
                }

                function removeCoupon(event) {
                    event.preventDefault();
                    const couponRemoveBtn = document.getElementById("couponRemoveBtn");
                    const couponBtn = document.getElementById('couponBtn');
                    const finalamountElement = document.getElementById('dynamicTotalAmt');

                    const finalP = parseInt('<%= totalPrice%>')
                    const discountedAmount = parseInt(finalamountElement.innerText)
                    console.log('discountedAmount : ', discountedAmount);
                    if (disType == "per") {
                        finalamout = discountedAmount + (disValue * finalP / 100);
                        finalamountElement.innerText = finalamout;
                    } else {
                        finalamout = discountedAmount + disValue;
                        finalamountElement.innerText = finalamout;
                    }

                    couponAlert.innerText = `coupon removed`;
                    couponAddedOrNot = false;
                    couponAlert.classList.remove('hidden');

                    couponRemoveBtn.classList.add('hidden');
                    couponBtn.classList.remove('hidden')
                }

                couponCheck.addEventListener("change", () => {
                    console.log("changed.....")
                    if (!couponCheck.checked) {
                        const couponRemoveBtn = document.getElementById("couponRemoveBtn");
                        const couponBtn = document.getElementById('couponBtn');
                        const couponInput = document.getElementById('couponInput');
                        const finalamountElement = document.getElementById('dynamicTotalAmt');
                        if (couponAddedOrNot) {
                            couponRemoveBtn.classList.add('hidden');
                            couponBtn.classList.add('hidden')
                            couponInput.value = null;
                            couponAlert.innerText = ``;
                            couponAddedOrNot = false;
                            finalamout = finalPrice;
                            finalamountElement.innerText = finalamout;
                        }
                    }
                })


                async function handleCheckout(event) {
                    console.log("added or not : ", couponAddedOrNot)
                    const user_id = sessionStorage.getItem('user_id');
                    const customerName = sessionStorage.getItem('username');
                    const checkAddress1 = document.getElementById('addressCheck1');
                    const checkAddress2 = document.getElementById('addressCheck2');
                    const checkAddress3 = document.getElementById('addressCheck3');
                    const couponInput = document.getElementById('couponInput').value;
                    const foodides = '<%=foodIds%>'
                    const cod = document.getElementById('cod');
                    const walletPay = document.getElementById('walletPay');
                    const onlinePayment = document.getElementById('onlinePayment');
                    const qty = document.querySelectorAll('.qty');
                    const cartItems = '<%-JSON.stringify(cartItems).trim()%>';
                    console.log(cartItems);
                    const check = JSON.parse(cartItems);

                    if (!checkAddress1.checked && !checkAddress2.checked && !checkAddress3.checked) {
                        alertMsg.innerHTML = `<i class="fa-solid fa-triangle-exclamation text-xl"></i> Please select one address to deliver`;
                        alertBox.classList.remove('-translate-x-full')
                        alertBox.classList.remove('opacity-0')
                        window.scrollTo(0, 0)
                        setTimeout(() => {
                            alertBox.classList.add('-translate-x-full')
                            alertBox.classList.add('opacity-0')
                        }, 3000)
                        return;
                    }


                    let selectedAddress = '';

                    if (checkAddress1.checked) {
                        selectedAddress = currentAdd1.innerText;
                    } else if (checkAddress2.checked) {
                        selectedAddress = currentAdd2.innerText;
                    } else if (checkAddress3.checked) {
                        selectedAddress = currentAdd3.innerText;
                    } else {
                        selectedAddress = 'No address selected';
                    }
                    console.log(selectedAddress)

                    console.log(check)
                    if (!check) {
                        alertMsg.innerHTML = `<i class="fa-solid fa-triangle-exclamation text-xl"></i> No Food items on the cart`;
                        alertBox.classList.remove('-translate-x-full')
                        alertBox.classList.remove('opacity-0')
                        window.scrollTo(0, 0)
                        setTimeout(() => {
                            alertBox.classList.add('-translate-x-full')
                            alertBox.classList.add('opacity-0')
                        }, 3000)
                        return;
                    }

                    if (walletPay.checked) {
                        const walletBalance = parseInt('<%=wallet?.balance%>');
                        if (!walletBalance) {
                            alertMsg.innerHTML = `<i class="fa-solid fa-triangle-exclamation text-xl"></i> There's nothing in your wallet`;
                            alertBox.classList.remove('-translate-x-full')
                            alertBox.classList.remove('opacity-0')
                            window.scrollTo(0, 0)
                            setTimeout(() => {
                                alertBox.classList.add('-translate-x-full')
                                alertBox.classList.add('opacity-0')
                            }, 3000)
                            return;
                        }
                        // let dynamicTotalAmt = document.getElementById('dynamicTotalAmt').innerText;
                        let totalAmt = finalPrice
                        console.log('pricessss : : ', walletBalance, finalPrice)
                        if (walletBalance < finalPrice) {
                            alertMsg.innerHTML = `<i class="fa-solid fa-triangle-exclamation text-xl"></i> Not enough money in your wallet`;
                            alertBox.classList.remove('-translate-x-full')
                            alertBox.classList.remove('opacity-0')
                            window.scrollTo(0, 0)
                            setTimeout(() => {
                                alertBox.classList.add('-translate-x-full')
                                alertBox.classList.add('opacity-0')
                            }, 3000)
                            return;
                        }
                        check.forEach(async (item, index) => {
                            // console.log(item.productName,item.productPrice,finalPrice,qty[index].innerText);
                            const productId = item._id;
                            const productName = item.productName;
                            const image = item.productImages[0];
                            const productPrice = item.productPrice;
                            const productQty = parseInt(qty[index].innerText);
                            console.log('productName : ', productName)
                            console.log('productPrice : ', productPrice)
                            console.log('productQty : ', productQty)
                            console.log('\n......................................')

                            const productData = {
                                user_id: user_id,
                                customerName: customerName,
                                productId: productId,
                                productName: productName,
                                image: image,
                                productQty: productQty,
                                productPrice: productPrice,
                                paymentMethod: 'FoodWo Wallet',
                                address: selectedAddress,
                                coupon: couponInput,
                                foodides: foodides
                            }

                            const reqData = await JSON.stringify(productData);
                            const checkResponse = await fetch('/cart-checkout', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': "application/json",
                                },
                                body: reqData
                            })
                            if (checkResponse.status == 400 || checkResponse.status == 404 || checkResponse.status == 500) {
                                const data = await checkResponse.json();
                                alertMsg.innerHTML = `<i class="fa-solid fa-triangle-exclamation text-xl"></i> ${data.err}`;
                                alertBox.classList.remove('-translate-x-full')
                                alertBox.classList.remove('opacity-0')
                                window.scrollTo(0, 0)
                                setTimeout(() => {
                                    alertBox.classList.add('-translate-x-full')
                                    alertBox.classList.add('opacity-0')
                                }, 3000)
                                return;
                            }


                            if (checkResponse.ok) {
                                const reqData = {
                                    foodid: productId,
                                    userid: user_id
                                }
                                const realData = await JSON.stringify(reqData);

                                const response = await fetch('/removeFromCart', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': "application/json",
                                    },
                                    body: realData
                                })
                                if (response.ok) {
                                    const data = await checkResponse.json();
                                    console.log(data)
                                    sessionStorage.setItem('orderid', data.orderid)
                                    sessionStorage.setItem('orderaddress', data.address)
                                    window.location.href = '/order-success'
                                }
                                console.log(`${productName} Ok.`)
                            }
                        });
                    } else if (cod.checked) {
                        check.forEach(async (item, index) => {
                            // console.log(item.productName,item.productPrice,finalPrice,qty[index].innerText);
                            const productId = item._id;
                            const productName = item.productName;
                            const image = item.productImages[0];
                            const productPrice = item.productPrice;
                            const productQty = parseInt(qty[index].innerText);
                            console.log('productName : ', productName)
                            console.log('productPrice : ', productPrice)
                            console.log('productQty : ', productQty)
                            console.log('\n......................................')

                            const productData = {
                                user_id: user_id,
                                customerName: customerName,
                                productId: productId,
                                productName: productName,
                                image: image,
                                productQty: productQty,
                                productPrice: productPrice,
                                paymentMethod: cod.checked ? 'COD' : 'CREDIT CARD',
                                address: selectedAddress,
                                coupon: couponInput,
                                foodides: foodides
                            }

                            const reqData = await JSON.stringify(productData);
                            const checkResponse = await fetch('/cart-checkout', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': "application/json",
                                },
                                body: reqData
                            })

                            if (checkResponse.status == 400 || checkResponse.status == 404 || checkResponse.status == 500) {
                                const data = await checkResponse.json();
                                alertMsg.innerHTML = `<i class="fa-solid fa-triangle-exclamation text-xl"></i> ${data.err}`;
                                alertBox.classList.remove('-translate-x-full')
                                alertBox.classList.remove('opacity-0')
                                window.scrollTo(0, 0)
                                setTimeout(() => {
                                    alertBox.classList.add('-translate-x-full')
                                    alertBox.classList.add('opacity-0')
                                }, 3000)
                                return;
                            }

                            if (checkResponse.ok) {
                                const reqData = {
                                    foodid: productId,
                                    userid: user_id
                                }
                                const realData = await JSON.stringify(reqData);

                                const response = await fetch('/removeFromCart', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': "application/json",
                                    },
                                    body: realData
                                })
                                if (response.ok) {
                                    const data = await checkResponse.json();
                                    console.log(data)
                                    sessionStorage.setItem('orderid', data.orderid)
                                    sessionStorage.setItem('orderaddress', data.address)
                                    window.location.href = '/order-success'
                                }
                                console.log(`${productName} Ok.`)
                            }
                        });
                    } else {
                        let valid = true;
                        try {
                            check.map(async (item, index) => {
                                // console.log(item.productName,item.productPrice,finalPrice,qty[index].innerText);
                                const productId = item._id;
                                const productName = item.productName;
                                const image = item.productImages[0];
                                const productPrice = item.productPrice;
                                const productQty = parseInt(qty[index].innerText);
                                console.log('productName : ', productName)
                                console.log('productPrice : ', productPrice)
                                console.log('productQty : ', productQty)
                                console.log('\n......................................')

                                const qtyData = {
                                    productId: productId,
                                    productQty: productQty
                                }
                                const checkingData = await JSON.stringify(qtyData);
                                const checkingQty = await fetch('/check-qty', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': "application/json"
                                    },
                                    body: checkingData
                                })

                                if (checkingQty.status != 200) {
                                    const data = await checkingQty.json();
                                    alertMsg.innerHTML = `<i class="fa-solid fa-triangle-exclamation text-xl"></i> ${data.err}`;
                                    alertBox.classList.remove('-translate-x-full')
                                    alertBox.classList.remove('opacity-0')
                                    window.scrollTo(0, 0)
                                    setTimeout(() => {
                                        alertBox.classList.add('-translate-x-full')
                                        alertBox.classList.add('opacity-0')
                                    }, 3000)
                                    valid = false;
                                    return false;
                                }
                            })
                            console.log('checkinggggg : : ', valid)
                            if (valid == false) {
                                return
                            } else {
                                const totalAmount = parseInt('<%=totalPrice%>')
                                const orderUrl = '/orders'
                                const paying = await axios.post(orderUrl, { amount: finalamout == 0 ? totalAmount : finalamout })
                                console.log(paying)
                                initPayment(paying.data)
                            }

                        } catch (error) {
                            console.log(error)
                        }
                    }
                }
            </script>
</body>

</html>