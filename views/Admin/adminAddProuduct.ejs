<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FoodWo - Products</title>
    <link href="/public/css/output.css" rel="stylesheet">
    <link rel="apple-touch-icon" sizes="180x180" href="/public/images/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/public/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/public/images/favicon-16x16.png">
    <script src="https://kit.fontawesome.com/70218ce737.js" crossorigin="anonymous"></script>
</head>

<body class="bg-[#EAEFF8]">
    <!-- Navigation -->
    <%- include('adminNavbar') %>

        <div id="alert" class="transition delay-150 ease-linear hidden py-4 px-3 bg-red-400 text-white text-center"><i
                class="fa-solid fa-triangle-exclamation text-xl"></i> We are facing some issues.Please try later.</div>
        <section class="px-5 py-3">

            <div class="">
                <div class="md:w-1/2 relative flex justify-center items-center mx-auto mb-5">
                    <div id="toast"
                        class="transition duration-[0.5s] md:w-80 bg-orange-500 py-5 px-3 hidden ease-linear rounded-md text-center text-white">
                    </div>
                </div>

                <div class="flex flex-col md:flex-row ">
                    <!-- Input Fields -->
                    <form id="form" class="md:w-1/2" action="/admin/addproduct" method="post"
                        enctype="multipart/form-data">
                        <div class="w-full flex flex-col my-2">
                            <label for="images">Product Images</label>
                            <input type="file" name="images" id="images" accept="image/*" maxlength="4"
                                multiple="multiple"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Product Name</label>
                            <input type="text" name="productName" maxlength="20" id="productName"
                                placeholder="Product Name"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Description</label>
                            <textarea type="text" name="description" id="description" placeholder="Product Description"
                                cols="3" rows="5"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500"></textarea>
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Price</label>
                            <input type="tel" maxlength="4" name="productPrice" id="productPrice"
                                placeholder="Product Price"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Type</label>
                            <select name="productType" id="productType"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                                <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                    value="none">None</option>
                                <% if(types){ types.forEach((type)=>{ %>
                                    <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                        value="<%=type.productType%>">
                                        <%=type.productType%>
                                    </option>
                                    <% }) } %>
                            </select>
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Category</label>
                            <select name="category" id="category"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                                <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                    value="none">None</option>
                                <% if(data){ data.forEach((cat)=>{ %>
                                    <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                        value="<%=cat.category %>">
                                        <%=cat.category %>
                                    </option>
                                    <% }) } %>
                            </select>
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Sold</label>
                            <input type="text" disabled name="sold" id="sold" placeholder="" value="0"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">In Stock</label>
                            <input type="number" name="inStock" id="inStock" autocomplete="new-password"
                                placeholder="Number of stock"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="my-8 text-center">
                            <button type="submit" id="submit" onclick="handleProductUpload(event)"
                                class="bg-orange-500 rounded-full py-2 px-6 md:px-6 text-white text-xl md:text-xl">Add
                                to stock</button>
                        </div>

                    </form>

                    <div class="md:w-1/2 bg-orange-500 py-4 px-5 my-5 md:my-0 md:mx-5 rounded-xl text-white">
                        <h1 class="text-xl font-bold my-3">Image Preview</h1>
                        <div>
                            <div class="flex flex-wrap" id="imageContainer">

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </section>
        <!-- Footer -->
        <%- include('adminFooter') %>

            <script>

                const images = document.getElementById('images')
                let imagePreview = document.getElementById('imageContainer');

                async function handleProductUpload(event) {
                    event.preventDefault();
                    //User Details
                    const productName = document.getElementById('productName').value;
                    const description = document.getElementById('description').value;
                    const productPrice = document.getElementById('productPrice').value;
                    const productType = document.getElementById('productType').value;
                    const category = document.getElementById('category').value;
                    // const sold = document.getElementById('sold').value;
                    const inStock = document.getElementById('inStock').value;
                    const toast = document.getElementById('toast');
                    const submit = document.getElementById('submit');
                    const form = document.getElementById('form');

                    const mainImage = document.getElementById('mainImage')
                    const relatedImages = document.getElementById('relatedImages')



                    if (!productName || !description || !productPrice || !productType || !category || !inStock) {
                        event.preventDefault();
                        window.scrollTo(0, 0)
                        toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> All fields are required.</span>`;
                        toast.classList.remove("hidden");
                        toast.classList.remove("translate-y-96");
                        setTimeout(() => {
                            toast.classList.add("hidden");
                            toast.classList.add("translate-y-96");
                        }, 3000)
                    }
                    else if (images.files.length < 1) {
                        event.preventDefault();
                        window.scrollTo(0, 0)
                        toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Product Images are required.</span>`;
                        toast.classList.remove("hidden");
                        toast.classList.remove("translate-y-96");
                        setTimeout(() => {
                            toast.classList.add("hidden");
                            toast.classList.add("translate-y-96");
                        }, 3000)
                    }
                    else if (images.files.length > 5) {
                        event.preventDefault();
                        window.scrollTo(0, 0)
                        toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i>Maximum 5 Product Images are allowed.</span>`;
                        toast.classList.remove("hidden");
                        toast.classList.remove("translate-y-96");
                        setTimeout(() => {
                            toast.classList.add("hidden");
                            toast.classList.add("translate-y-96");
                        }, 3000)
                    }
                    else if (parseInt(productPrice) <= 0) {
                        event.preventDefault();
                        window.scrollTo(0, 0)
                        toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Product price must be greater than zero.</span>`;
                        toast.classList.remove("hidden");
                        toast.classList.remove("translate-y-96");
                        setTimeout(() => {
                            toast.classList.add("hidden");
                            toast.classList.add("translate-y-96");
                        }, 3000)
                        return;
                    } else if (parseInt(inStock) <= 0) {
                        event.preventDefault();
                        window.scrollTo(0, 0)
                        toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Stock must be greater than zero.</span>`;
                        toast.classList.remove("hidden");
                        toast.classList.remove("translate-y-96");
                        setTimeout(() => {
                            toast.classList.add("hidden");
                            toast.classList.add("translate-y-96");
                        }, 3000)
                        return;
                    }
                    else {
                        // const formDatas = {
                        //     productName: productName,
                        //     description: description,
                        //     productPrice: productPrice,
                        //     productType: productType,
                        //     category: category,
                        //     sold: 0,
                        //     inStock: inStock,
                        //     images: images.files
                        // }
                        const formData = new FormData(form)


                        for (let item of formData) {
                            console.log(item[0], " ", item[1])
                        }

                        const res = await fetch('/admin/addproduct', {
                            method: 'POST',
                            body: formData
                        });
                        if (res.status == 400) {
                            const data = await res.json();
                            window.scrollTo(0, 0)
                            toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> ${data.err}</span>`;
                            toast.classList.remove("hidden");
                            toast.classList.remove("translate-y-96");
                            setTimeout(() => {
                                toast.classList.add("hidden");
                                toast.classList.add("translate-y-96");
                            }, 3000)
                            return;
                        }
                        if (res.ok) {
                            const data = await res.json();
                            window.scrollTo(0, 0)
                            toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-check text-xl"></i> ${data.success}</span>`;
                            toast.classList.remove("hidden");
                            toast.classList.remove("translate-y-96");
                            setTimeout(() => {
                                toast.classList.add("hidden");
                                toast.classList.add("translate-y-96");
                                window.location.href="/admin/products"
                            }, 3000)
                        }
                    }
                }

                images.addEventListener('change', () => {


                    imagePreview.innerHTML = "";
                    console.log(images.files)
                    if (images.files) {

                        let index = 1;
                        for (const file of images.files) {
                            const imageContainer = document.createElement('div');

                            imageContainer.classList.add('w-40', 'h-40', 'mx-2', 'my-4')
                            imageContainer.id = index;
                            imageContainer.innerHTML = `
                                        <div class="text-end"><span class="text-white"><i id="${index}" onclick="removeImage(event)" class="cursor-pointer fa-solid fa-close"></i></span></div>
                                        <img class="w-full h-full rounded object-cover" src=${URL.createObjectURL(file)} alt="productImages">`;
                            imagePreview.appendChild(imageContainer);
                            index++;
                        }
                    }
                })

                // Get references to HTML elements
                const mainImageInput = document.querySelector('input[name="mainimage"]');
                const relatedImagesInput = document.querySelector('input[name="relatedimages"]');
                const mainImagePreview = document.getElementById('mainImagePreview');
                const relatedImagesPreview = document.getElementById('relatedImagesPreview');


                function removeImage(event) {
                    const imageContainerId = event.target.id; // Get the ID of the clicked button

                    // Find the corresponding image container by its ID
                    const imageContainer = document.getElementById(imageContainerId);

                    if (imageContainer) {
                        // Remove the image container from the relatedImagesPreview
                        imagePreview.removeChild(imageContainer);

                        // Create a new FileList without the removed file
                        const newFilesList = new DataTransfer();
                        for (let i = 0; i < images.files.length; i++) {
                            if (i !== parseInt(imageContainerId) - 1) {
                                newFilesList.items.add(images.files[i]);
                            }
                        }

                        // Update the input element with the new FileList
                        images.files = newFilesList.files;
                        imagePreview.innerHTML = "";
                        let index = 1;
                        for (const file of images.files) {
                            const imageContainer = document.createElement('div');

                            imageContainer.classList.add('w-40', 'h-40', 'mx-2', 'my-4')
                            imageContainer.id = index;
                            imageContainer.innerHTML = `
                                        <div class="text-end"><span class="text-white"><i id="${index}" onclick="removeImage(event)" class="cursor-pointer fa-solid fa-close"></i></span></div>
                                        <img class="w-full h-full rounded object-cover" src=${URL.createObjectURL(file)} alt="productImages">`;
                            imagePreview.appendChild(imageContainer);
                            index++;
                        }
                        console.log('new one : ', images.files);
                    }
                }



                //                 // Add event listeners to the file input fields
                //                 mainImageInput.addEventListener('change', () => {
                //                     if (mainImageInput.files) {
                //                         const mainImageContainer = document.getElementById('mainImageContainer');
                //                         mainImageContainer.innerHTML = `
                // <img id="imgElement" class="w-full h-full object-cover rounded" src="${URL.createObjectURL(mainImageInput.files[0])}" alt="mainImage">`;
                //                     }
                //                 });

                //                 relatedImagesInput.addEventListener('change', () => {
                //                     // Clear previous previews
                //                     // relatedImagesPreview.innerHTML = '';
                //                     console.log(relatedImagesInput.files);
                //                     // Display previews for related images
                //                     if (relatedImagesInput.files.length > 4) {
                //                         toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i>Only 4 images are allowed for related Images.</span>`;
                //                         toast.classList.remove("hidden");
                //                         toast.classList.remove("translate-y-96");
                //                         setTimeout(() => {
                //                             toast.classList.add("hidden");
                //                             toast.classList.add("translate-y-96");
                //                         }, 3000)
                //                         return;
                //                     }
                //                     let index = 1;
                //                     for (const file of relatedImagesInput.files) {
                //                         const imageContainer = document.createElement('div');
                //                         imageContainer.classList.add('w-32', 'h-32', 'mx-2', 'my-4')
                //                         imageContainer.id = index;
                //                         imageContainer.innerHTML = `
                //                         <div class="text-end"><span class="text-white"><i id=${index} onclick="removeImage(event)" class="cursor-pointer fa-solid fa-close"></i></span></div>
                //                         <img class="w-full h-full rounded object-cover" src=${URL.createObjectURL(file)} alt="relatedImages">`;
                //                         relatedImagesPreview.appendChild(imageContainer);
                //                         index++;
                //                     }
                //                 });

            </script>
</body>

</html>