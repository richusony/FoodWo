<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FoodWo - Update Product</title>
    <link href="/public/css/output.css" rel="stylesheet">
    <link rel="apple-touch-icon" sizes="180x180" href="/public/images/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/public/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/public/images/favicon-16x16.png">
    <script src="https://kit.fontawesome.com/70218ce737.js" crossorigin="anonymous"></script>
</head>

<body class="bg-[#EAEFF8]">
    <!-- Navigation -->
    <%- include('adminNavbar') %>
        <% let finalIndex; %>

            <div id="alert" class="transition delay-150 ease-linear hidden py-4 px-3 bg-red-400 text-white text-center">
                <i class="fa-solid fa-triangle-exclamation text-xl"></i> We are facing some issues.Please try later.
            </div>
            <section class="px-5 py-3">

                <div class="">
                    <div class="md:w-1/2 relative flex justify-center items-center mx-auto mb-5">
                        <div id="toast"
                            class="transition duration-[0.5s] md:w-80 bg-orange-500 py-5 px-3 hidden ease-linear rounded-md text-center text-white">
                        </div>
                    </div>

                    <div class="flex flex-col md:flex-row ">
                        <!-- Input Fields -->
                        <form id="form" class="md:w-1/2">

                            <div class="w-full flex flex-col my-2">
                                <label for="images">Product Images</label>
                                <input type="file" name="images" id="images" accept="image/*" maxlength="4"
                                    multiple="multiple"
                                    class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                            </div>
                            <% if(data){ %>
                                <input type="hidden" name="id" value="<%=data[0]._id%>">
                                <div class="flex flex-col my-2">
                                    <label for="">Product Name</label>
                                    <input type="text" name="productName" maxlength="20" id="productName"
                                        value="<%=data[0].productName%>" placeholder="Product Name"
                                        class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                                </div>
                                <div class="flex flex-col my-2">
                                    <label for="">Description</label>
                                    <textarea type="text" name="description" id="description"
                                        placeholder="Product Description" cols="3" rows="5"
                                        class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500"><%=data[0].description%></textarea>
                                </div>
                                <div class="flex flex-col my-2">
                                    <label for="">Price</label>
                                    <input type="tel" maxlength="4" name="productPrice" id="productPrice"
                                        value="<%=data[0].productPrice%>" placeholder="Product Price"
                                        class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                                </div>
                                <div class="flex flex-col my-2">
                                    <label for="">Type</label>
                                    <select name="productType" id="productType"
                                        class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">

                                        <option selected
                                            class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                            value="<%= data[0].productType %>">
                                            <%= data[0].productType %>
                                        </option>
                                        <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                            value="none">None</option>
                                        <% if(types){ types.forEach((type)=>{ %>
                                            <option
                                                class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                                value="<%=type.productType%>">
                                                <%=type.productType%>
                                            </option>
                                            <% }) } %>
                                    </select>
                                </div>
                                <div class="flex flex-col my-2">
                                    <label for="">Category</label>
                                    <select name="category" id="category"
                                        class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                                        <option selected
                                            class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                            value="<%= data[0].category %>">
                                            <%= data[0].category %>
                                        </option>
                                        <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                            value="none">None</option>
                                        <% if(category){ category.forEach((cat)=>{ %>
                                            <option
                                                class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                                value="<%=cat.category %>">
                                                <%=cat.category %>
                                            </option>
                                            <% }) } %>
                                    </select>
                                </div>
                                <div class="flex flex-col my-2">
                                    <label for="">Sold</label>
                                    <input type="text" disabled name="sold" id="sold" placeholder=""
                                        value="<%= data[0].productSold %>"
                                        class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                                </div>
                                <div class="flex flex-col my-2">
                                    <label for="">In Stock</label>
                                    <input type="number" name="inStock" id="inStock" autocomplete="new-password"
                                        value="<%= data[0].productInStock %>" placeholder="Number of stock"
                                        class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                                </div>
                                <div class="my-8 text-center">
                                    <button type="submit" onclick="handleProductUpload(event)"
                                        class="bg-orange-500 rounded-full py-2 px-6 md:px-6 text-white text-xl md:text-xl">Update</button>
                                </div>
                                <% } %>
                        </form>

                        <div class="md:w-1/2 bg-orange-500 py-4 px-5 my-5 md:my-0 md:mx-5 rounded-xl text-white">
                            <h1 class="text-xl font-bold my-3">Image Preview</h1>
                            <div>
                                <div id="ImagesPreview" class="flex flex-wrap justify-between items-center">
                                    <% data[0].productImages.forEach((img,index)=>{ %>
                                        <div id="<%=index%>" class="w-48 h-48 mx-2 my-4">
                                            <div class="text-end ">
                                                <i id="<%=index%>" data-img="<%=img%>" onclick="removeImage(event)"
                                                    class="cursor-pointer fa-solid fa-close"></i>
                                            </div>
                                            <img class="w-full h-full rounded object-cover" src="/<%=img%>"
                                                alt="RelatedImages">
                                        </div>
                                        <% finalIndex=index }) %>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                </div>

            </section>
            <!-- Footer -->
            <%- include('adminFooter') %>

                <script>
                    const images = document.getElementById('images')
                    const form = document.getElementById('form');
                    let imagePreview = document.getElementById('ImagesPreview');
                    console.log('final index : ', '<%=finalIndex%>')

                    const toast = document.getElementById('toast');
                    async function handleProductUpload(event) {
                        event.preventDefault();
                        //User Details
                        const productName = document.getElementById('productName').value;
                        const description = document.getElementById('description').value;
                        const productPrice = document.getElementById('productPrice').value;
                        const productType = document.getElementById('productType').value;
                        const category = document.getElementById('category').value;
                        // const sold = document.getElementById('sold').value;
                        const inStock = document.getElementById('inStock').value;
                        const imagesCount = parseInt('<%=data[0].productImages.length%>');
                        console.log("Count ",imagesCount);
                        console.log(productName, description, productPrice, productType, category, inStock)

                        if (productName == "" || description == "" || productPrice == "" || productType == "" || category == "" || inStock == "") {
                            event.preventDefault();
                            window.scrollTo(0, 0)
                            toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> All fields are required.</span>`;
                            toast.classList.remove("hidden");
                            toast.classList.remove("translate-y-96");
                            setTimeout(() => {
                                toast.classList.add("hidden");
                                toast.classList.add("translate-y-96");
                            }, 3000)
                            return;
                        }else if(images.files.length <= 0 && imagesCount <= 0){
                            event.preventDefault();
                            window.scrollTo(0, 0)
                            toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Product Images are required.</span>`;
                            toast.classList.remove("hidden");
                            toast.classList.remove("translate-y-96");
                            setTimeout(() => {
                                toast.classList.add("hidden");
                                toast.classList.add("translate-y-96");
                            }, 3000)
                            return;
                        }
                        else if (images.files.length > 5) {
                            event.preventDefault();
                            window.scrollTo(0, 0)
                            toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i>Maximum 5 Product Images are allowed.</span>`;
                            toast.classList.remove("hidden");
                            toast.classList.remove("translate-y-96");
                            setTimeout(() => {
                                toast.classList.add("hidden");
                                toast.classList.add("translate-y-96");
                            }, 3000)
                        }
                        else if (parseInt(productPrice) <= 0) {
                            event.preventDefault();
                            window.scrollTo(0, 0)
                            toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Product price must be greater than zero.</span>`;
                            toast.classList.remove("hidden");
                            toast.classList.remove("translate-y-96");
                            setTimeout(() => {
                                toast.classList.add("hidden");
                                toast.classList.add("translate-y-96");
                            }, 3000)
                            return;
                        } else if (parseInt(inStock) <= 0) {
                            event.preventDefault();
                            window.scrollTo(0, 0)
                            toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Stock must be greater than zero.</span>`;
                            toast.classList.remove("hidden");
                            toast.classList.remove("translate-y-96");
                            setTimeout(() => {
                                toast.classList.add("hidden");
                                toast.classList.add("translate-y-96");
                            }, 3000)
                            return;
                        }
                        else {
                            const formDatas = {
                                productName: productName,
                                description: description,
                                productPrice: productPrice,
                                productType: productType,
                                category: category,
                                inStock: inStock,
                            }
                            const formData = new FormData(form)


                            for (let item of formData) {
                                console.log(item[0], " ", item[1])
                            }
                            console.log('formdata :: ', formData)

                            const res = await fetch('/admin/update-product', {
                                method: 'POST',
                                body: formData
                            });
                            if (res.status == 400) {
                                const data = await res.json();
                                window.scrollTo(0, 0)
                                toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> ${data.err}</span>`;
                                toast.classList.remove("hidden");
                                toast.classList.remove("translate-y-96");
                                setTimeout(() => {
                                    toast.classList.add("hidden");
                                    toast.classList.add("translate-y-96");
                                }, 3000)
                                return;
                            }
                            if (res.ok) {
                                const data = await res.json();
                                window.scrollTo(0, 0)
                                toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-check text-xl"></i> ${data.success}</span>`;
                                toast.classList.remove("hidden");
                                toast.classList.remove("translate-y-96");
                                setTimeout(() => {
                                    toast.classList.add("hidden");
                                    toast.classList.add("translate-y-96");
                                    window.location.href = "/admin/products"
                                }, 3000)
                            }
                        }
                    }

                    // Get references to HTML elements
                    // const mainImageInput = document.querySelector('input[name="mainimage"]');
                    // const relatedImagesInput = document.querySelector('input[name="relatedimages"]');
                    // const mainImagePreview = document.getElementById('mainImagePreview');
                    // const relatedImagesPreview = document.getElementById('relatedImagesPreview');

                    // const foodId = '<%=data[0]._id%>'

                    // // Create an array to store the image file names
                    // let imageFileNames = ;
                    // imageFileNames = imageFileNames.split(',')
                    // console.log(imageFileNames)

                    // // Create a DataTransfer object and add each file name as a new File object
                    // const dbRImages = new DataTransfer();
                    // imageFileNames.forEach(fileName => {
                    //     const file = new File([fileName], fileName);
                    //     dbRImages.items.add(file);
                    // });

                    // // Set the files property of the relatedImagesInput element to the DataTransfer object
                    // relatedImagesInput.files = dbRImages.files;
                    // console.log('new one : ', relatedImagesInput.files);

                    images.addEventListener('change', () => {
                        console.log(images.files)
                        if (images.files) {

                            let index = 1;
                            for (const file of images.files) {
                                const imageContainer = document.createElement('div');

                                imageContainer.classList.add('w-40', 'h-40', 'mx-2', 'my-4')
                                imageContainer.id = index;
                                imageContainer.innerHTML = `
                    <div class="text-end"><span class="text-white"><i id="${index}" onclick="removeImage(event)" class="cursor-pointer fa-solid fa-close"></i></span></div>
                    <img class="w-full h-full rounded object-cover" src=${URL.createObjectURL(file)} alt="productImages">`;
                                imagePreview.appendChild(imageContainer);
                                index++;
                            }
                        }
                        const dbImages = '<%=data[0].productImages%>'
                        const newFilesList = new DataTransfer();
                            for (let i = 0; i < images.files.length; i++) {
                                    newFilesList.items.add(images.files[i]);
                            }



                            // Update the input element with the new FileList
                            images.files = newFilesList.files;
                            console.log('new one : ', images.files);
                    })



                    async function removeImage(event) {
                        event.preventDefault();
                        const imageContainerId = event.target.id; // Get the ID of the clicked button
                        const dataImg = event.target.dataset.img;

                        const foodData = {
                            foodid: '<%=data[0]._id%>',
                            foodimg: dataImg
                        }
                        const reqData = await JSON.stringify(foodData)
                        const response = await fetch('/admin/remove-image', {
                            method: 'PATCH',
                            headers: {
                                'Content-Type': "application/json"
                            },
                            body: reqData
                        })
                        if (response.status == 400) {
                            const data = await response.json();
                            toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> ${data.err}</span>`;
                            toast.classList.remove("hidden");
                            toast.classList.remove("translate-y-96");
                            setTimeout(() => {
                                toast.classList.add("hidden");
                                toast.classList.add("translate-y-96");
                            }, 3000)
                            return;
                        }
                        if (response.ok) {
                            window.location.reload()
                        } else {
                            toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Problem in removing image.</span>`;
                            toast.classList.remove("hidden");
                            toast.classList.remove("translate-y-96");
                            setTimeout(() => {
                                toast.classList.add("hidden");
                                toast.classList.add("translate-y-96");
                            }, 3000)
                        }

                        // Find the corresponding image container by its ID
                        const imageContainer = document.getElementById(imageContainerId);

                        if (imageContainer) {
                            // Remove the image container from the relatedImagesPreview
                            imagePreview.removeChild(imageContainer);

                            // Create a new FileList without the removed file
                            const newFilesList = new DataTransfer();
                            for (let i = 0; i < images.files.length; i++) {
                                if (i !== parseInt(imageContainerId) - 1) {
                                    newFilesList.items.add(images.files[i]);
                                }
                            }



                            // Update the input element with the new FileList
                            images.files = newFilesList.files;
                            console.log('new one : ', images.files);
                        }
                    }

                    function removeFileImage(event) {
                        const imageContainerId = event.target.id;
                        const fileName = event.target.dataset.filename;
                        const imageContainer = document.getElementById("imgContainer" + imageContainerId);

                        const files = Array.from(images.files);

                        const newFileList = new DataTransfer();
                        files.forEach((file) => {
                            if (file.name !== fileName) {
                                newFileList.items.add(file);
                            }
                        });

                        images.files = newFileList.files;
                        imagePreview.removeChild(imageContainer);
                    }


                    //                     // Add event listeners to the file input fields
                    //                     mainImageInput.addEventListener('change', () => {
                    //                         if (mainImageInput.files) {
                    //                             const mainImageContainer = document.getElementById('mainImageContainer');
                    //                             mainImageContainer.innerHTML = `
                    // <img id="imgElement" class="w-full h-full object-cover rounded" src="${URL.createObjectURL(mainImageInput.files[0])}" alt="mainImage"> `;
                    //                         }
                    //                     });

                    //         // const existingFiles = Array.from(relatedImagesInput.files); // Convert the existing files to an array
                    //         relatedImagesInput.addEventListener('change', () => {
                    //             if (relatedImagesInput.files.length > 4 - parseInt(imageFileNames.length)) {
                    //                 toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i>Only 4 images are allowed for related Images.</span>`;
                    //                 toast.classList.remove("hidden");
                    //                 toast.classList.remove("translate-y-96");
                    //                 setTimeout(() => {
                    //                     toast.classList.add("hidden");
                    //                     toast.classList.add("translate-y-96");
                    //                 }, 3000);
                    //                 return;
                    //             }

                    //             let index = parseInt('<%=finalIndex%>');
                    //             index++;
                    //             for (const file of relatedImagesInput.files) {
                    //                 const imageContainer = document.createElement('div');
                    //                 imageContainer.id = index;
                    //                 imageContainer.classList.add('w-48', 'h-48', 'mx-2', 'my-4')
                    //                 imageContainer.innerHTML = `
                    // <div class="text-end"><span class="text-white"><i id=${index} data-filename="${file.name}" onclick="removeFileImage(event)" class="cursor-pointer fa-solid fa-close"></i></span></div>
                    // <img class="w-full h-full rounded object-cover" src=${URL.createObjectURL(file)} alt="relatedImages">`;
                    //                 relatedImagesPreview.appendChild(imageContainer);
                    //                 index++;
                    //             }
                    //         });



                </script>
</body>

</html>